{"version":3,"sources":["pages/Main.jsx","components/FormClientComponent.jsx","pages/NewClient.jsx","components/ListClientsComponent.jsx","pages/DashboardClients.jsx","components/FormUpdateClient.jsx","pages/UpdateClient.jsx","App.js","index.js"],"names":["MainComponent","className","to","role","FormClientComponent","useForm","register","handleSubmit","errors","stateInitial","_id","clientContact","nit","email","contact","phone","valueSales","observation","region","ejecutive","date","moment","format","useState","client","setClient","localStorage","getItem","JSON","parse","data","setData","useEffect","setItem","stringify","onSubmit","dataForm","e","Swal","fire","position","icon","title","showConfirmButton","timer","target","reset","type","placeholder","name","value","ref","required","onChange","event","id","uniqid","NewClient","withRouter","history","useHistory","dateNow","options","filterType","responsive","downloadOptions","filename","separator","onRowClick","rowData","rowMeta","push","columns","label","display","DashboardClients","data-toggle","data-target","aria-controls","aria-expanded","aria-label","ListClientsComponent","FormUpdateComponent","props","dataUpdate","indexClient","findIndex","elem","UpdateClientComponent","id_params","useParams","setDataFiltered","filterClient","filter","App","exact","path","component","NewClientComponent","DashboardClientsComponent","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c31d693e.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst MainComponent = () => {\r\n     return (\r\n          <div className=\"jumbotron\">\r\n               <h1 className=\"display-4\">Bienvenido a coexito app</h1>\r\n               <p className=\"lead\">Guarda tus clientes de manera local y exportalos en una lista de excel.</p>\r\n               <hr className=\"my-4\" />\r\n               <h5 className=\"mb-5\">Â¿Que deseas hacer?</h5>\r\n               <Link className=\"btn btn-outline-primary mr-5\" to=\"/coexitoapp/newclient\" role=\"button\">Agregar un cliente</Link>\r\n               <Link className=\"btn btn-secondary\" to=\"/coexitoapp/dashboard\" role=\"button\">Gestionar mis clientes</Link>\r\n          </div>\r\n     );\r\n}\r\n\r\nexport default MainComponent;","import React, { useState, useEffect } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport Swal from 'sweetalert2';\r\nimport moment from 'moment';\r\nimport uniqid from 'uniqid';\r\n\r\n\r\nconst FormClientComponent = () => {\r\n\r\n     const { register, handleSubmit, errors } = useForm();\r\n     const dateNow = moment().format('L');\r\n\r\n     const stateInitial = {\r\n          _id: \"\",\r\n          clientContact: \"\",\r\n          nit: \"\",\r\n          email: \"\",\r\n          contact: \"\",\r\n          phone: \"\",\r\n          valueSales: \"0\",\r\n          observation: \"\",\r\n          region: \"MEDELLÃN\",\r\n          ejecutive: \"JUDY CANO\",\r\n          date: dateNow\r\n     }\r\n\r\n     const [client, setClient] = useState(stateInitial);\r\n     const [data, setData] = useState(localStorage.getItem('datos') !== null ? JSON.parse(localStorage.getItem('datos')) : []);\r\n\r\n     const onSubmit = (dataForm, e) => {\r\n          setData([...data,\r\n               client]\r\n          )\r\n          Swal.fire({\r\n               position: 'top-end',\r\n               icon: 'success',\r\n               title: 'Cliente agregado con exito.',\r\n               showConfirmButton: false,\r\n               timer: 1200\r\n          })\r\n          setClient(stateInitial);\r\n          e.target.reset();\r\n     }\r\n\r\n     useEffect(() => {\r\n          localStorage.setItem('datos', JSON.stringify(data));\r\n     }, [data])\r\n\r\n\r\n     return (\r\n          <div className=\"container\">\r\n               <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <div className=\"row m-3\">\r\n                         <div className=\"col\">\r\n                              <input type=\"text\" className=\"form-control\" placeholder=\"CLIENTE\"\r\n                                   name=\"clientContact\"\r\n                                   value={client.clientContact}\r\n                                   ref={register({ required: true })}\r\n                                   onChange={(event) => {\r\n                                        setClient({\r\n                                             ...client,\r\n                                             clientContact: event.target.value\r\n                                        })\r\n                                   }}\r\n                              />\r\n                              {errors.clientContact && <span className=\"badge badge-danger\">Este campo es obligatorio</span>}\r\n                         </div>\r\n                         <div className=\"col\">\r\n                              <input type=\"number\" className=\"form-control\" placeholder=\"NIT\"\r\n                                   name=\"nit\"\r\n                                   value={client.nit}\r\n                                   ref={register({ required: true })}\r\n                                   onChange={(event) => {\r\n                                        const id = uniqid();\r\n                                        setClient({\r\n                                             ...client,\r\n                                             nit: event.target.value,\r\n                                             _id: id\r\n                                        })\r\n                                   }}\r\n                              />\r\n                              {errors.nit && <span className=\"badge badge-danger\">Este campo es obligatorio</span>}\r\n                         </div>\r\n                    </div>\r\n                    <div className=\"row m-3\">\r\n                         <div className=\"col\">\r\n                              <input type=\"email\" className=\"form-control\" placeholder=\"CORREO\"\r\n                                   name=\"email\"\r\n                                   value={client.email}\r\n                                   ref={register({ required: true })}\r\n                                   onChange={(event) => {\r\n                                        setClient({\r\n                                             ...client,\r\n                                             email: event.target.value\r\n                                        })\r\n                                   }}\r\n                              />\r\n                              {errors.email && <span className=\"badge badge-danger\">Este campo es obligatorio</span>}\r\n                         </div>\r\n                         <div className=\"col\">\r\n                              <input type=\"text\" className=\"form-control\" placeholder=\"NOMBRE CONTACTO\"\r\n                                   name=\"contact\"\r\n                                   value={client.contact}\r\n                                   ref={register({ required: true })}\r\n                                   onChange={(event) => {\r\n                                        setClient({\r\n                                             ...client,\r\n                                             contact: event.target.value\r\n                                        })\r\n                                   }}\r\n                              />\r\n                              {errors.contact && <span className=\"badge badge-danger\">Este campo es obligatorio</span>}\r\n                         </div>\r\n                    </div>\r\n                    <div className=\"row m-3\">\r\n                         <div className=\"col input-group\">\r\n                              <div className=\"input-group-prepend\">\r\n                                   <span className=\"input-group-text\">+57</span>\r\n                              </div>\r\n                              <input type=\"number\" className=\"form-control\" placeholder=\"CELULAR\"\r\n                                   name=\"phone\"\r\n                                   value={client.phone}\r\n                                   ref={register({ required: true })}\r\n                                   onChange={(event) => {\r\n                                        setClient({\r\n                                             ...client,\r\n                                             phone: event.target.value\r\n                                        })\r\n                                   }}\r\n                              />\r\n                              {errors.phone && <span className=\"badge badge-danger\">Este campo es obligatorio</span>}\r\n                         </div>\r\n                         <div className=\"col input-group\">\r\n                              <div className=\"input-group-prepend\">\r\n                                   <span className=\"input-group-text\">$</span>\r\n                              </div>\r\n                              <input type=\"number\" className=\"form-control\" placeholder=\"VALOR VENTA\"\r\n                                   name=\"valueSales\"\r\n                                   value={client.valueSales}\r\n                                   ref={register({ required: false })}\r\n                                   onChange={(event) => {\r\n                                        setClient({\r\n                                             ...client,\r\n                                             valueSales: event.target.value\r\n                                        })\r\n                                   }}\r\n                              />\r\n                              {errors.valueSales && <span className=\"badge badge-danger\">Este campo es obligatorio</span>}\r\n                         </div>\r\n                    </div>\r\n                    <div className=\"row m-3\">\r\n                         <div className=\"col\">\r\n                              <textarea className=\"form-control\" placeholder=\"OBSERVACIONES\"\r\n                                   name=\"observation\"\r\n                                   value={client.observation}\r\n                                   ref={register({ required: true })}\r\n                                   onChange={(event) => {\r\n                                        setClient({\r\n                                             ...client,\r\n                                             observation: event.target.value\r\n                                        })\r\n                                   }}\r\n                              />\r\n                              {errors.observation && <span className=\"badge badge-danger\">Este campo es obligatorio</span>}\r\n                         </div>\r\n                         <div className=\"col\">\r\n                              <input className=\"btn btn-primary btn-lg btn-block\" type=\"submit\" value=\"Guardar cliente\" />\r\n                         </div>\r\n                    </div>\r\n               </form>\r\n          </div>\r\n     );\r\n}\r\n\r\nexport default FormClientComponent;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nimport FormClientComponent from '../components/FormClientComponent'\r\n\r\nconst NewClient = () => {\r\n     return ( \r\n          <div>\r\n               <div className=\"jumbotron\">\r\n               <h1 className=\"display-4\">Agrega un nuevo cliente</h1>\r\n               <p className=\"lead\">Este cliente sera almacenado de manera local, es decir que solo se mostrara en este computador</p>\r\n               <Link className=\"btn btn-secondary\" to=\"/coexitoapp/dashboard\" role=\"button\">Gestionar mis clientes</Link>\r\n          </div>\r\n          <h4 className=\"text-center m-5\">COMPLETA TODOS LOS DATOS DEL FORMULARIO</h4>\r\n               <FormClientComponent />\r\n          </div>\r\n      );\r\n}\r\n \r\nexport default NewClient;","import React, { useState } from 'react';\r\nimport { useHistory, withRouter } from 'react-router-dom';\r\n\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport moment from 'moment';\r\n\r\n\r\nconst ListClients = () => {\r\n\r\n     const history = useHistory();\r\n     const dateNow = moment().format('L');\r\n     const [data] = useState(localStorage.getItem('datos') !== null ? JSON.parse(localStorage.getItem('datos')) : []);\r\n\r\n     const columns = [\r\n          {\r\n               label: \"ID\", name: \"_id\", options: {\r\n                    display: 'false'\r\n               }\r\n          },\r\n          { label: \"FECHA\", name: \"date\" },\r\n          { label: \"REGIONAL\", name: \"region\" },\r\n          { label: \"CLIENTE\", name: \"clientContact\" },\r\n          { label: \"NIT\", name: \"nit\" },\r\n          { label: \"VALORES VENTA\", name: \"valueSales\" },\r\n          { label: \"CONTACTO\", name: \"contact\" },\r\n          { label: \"CELULAR\", name: \"phone\" },\r\n          { label: \"OBSERVACIONES\", name: \"observation\" },\r\n          { label: \"EJECUTIVO\", name: \"ejecutive\" },\r\n     ];\r\n     const options = {\r\n          filterType: 'checkbox',\r\n          responsive: \"standard\",\r\n          downloadOptions: {\r\n               filename: 'recaudo_y_ventas_' + dateNow + '.csv',\r\n               separator: ';'\r\n          },\r\n          onRowClick: function (rowData, rowMeta) {\r\n               const id = rowData[0]\r\n               history.push('dashboard/' + id)\r\n          }\r\n     };\r\n\r\n     return (\r\n          <div className=\"m-5\">\r\n               <MUIDataTable\r\n                    title={\"Lista de clientes\"}\r\n                    data={data}\r\n                    columns={columns}\r\n                    options={options}\r\n               />\r\n          </div>\r\n     );\r\n}\r\n\r\nexport default withRouter(ListClients);","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport ListClientsComponent from '../components/ListClientsComponent'\r\n\r\n\r\nconst DashboardClients = () => {\r\n     return (\r\n          <>\r\n               <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                         <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n                         <div className=\"navbar-nav\">\r\n                              <Link className=\"nav-item btn btn-primary\" to=\"/coexitoapp/newclient\">Agrega un nuevo cliente<span className=\"sr-only\">(current)</span></Link>\r\n                         </div>\r\n                    </div>\r\n               </nav>\r\n               <ListClientsComponent />\r\n          </>\r\n     );\r\n}\r\n\r\nexport default DashboardClients;","import React, { useState, useEffect } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport Swal from 'sweetalert2';\r\nimport moment from 'moment';\r\nimport uniqid from 'uniqid';\r\n\r\n\r\nconst FormUpdateComponent = (props) => {\r\n\r\n     const { register, handleSubmit, errors } = useForm();\r\n     const dateNow = moment().format('L');\r\n\r\n     const [client, setClient] = useState(props.dataUpdate);\r\n     const [data] = useState(localStorage.getItem('datos') !== null ? JSON.parse(localStorage.getItem('datos')) : []);\r\n\r\n     const onSubmit = () => {\r\n          data[indexClient] = client;\r\n          localStorage.setItem('datos', JSON.stringify(data));\r\n          Swal.fire({\r\n               position: 'top-end',\r\n               icon: 'success',\r\n               title: 'Datos actualizados con exito con exito.',\r\n               showConfirmButton: false,\r\n               timer: 1200\r\n          })\r\n     }\r\n\r\n     const indexClient = data.findIndex(function (elem) {\r\n          return elem._id === client._id\r\n     });\r\n\r\n     useEffect(() => {\r\n          setClient({\r\n               ...client,\r\n               date: dateNow\r\n          })\r\n     }, [])\r\n\r\n     return (\r\n          <div className=\"container\">\r\n               <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <div className=\"row m-3\">\r\n                         <div className=\"col\">\r\n                              <input type=\"text\" className=\"form-control\" placeholder=\"CLIENTE\"\r\n                                   name=\"clientContact\"\r\n                                   value={client.clientContact}\r\n                                   ref={register({ required: true })}\r\n                                   onChange={(event) => {\r\n                                        setClient({\r\n                                             ...client,\r\n                                             clientContact: event.target.value\r\n                                        })\r\n                                   }}\r\n                              />\r\n                              {errors.clientContact && <span className=\"badge badge-danger\">Este campo es obligatorio</span>}\r\n                         </div>\r\n                         <div className=\"col\">\r\n                              <input type=\"number\" className=\"form-control\" placeholder=\"NIT\"\r\n                                   name=\"nit\"\r\n                                   value={client.nit}\r\n                                   ref={register({ required: true })}\r\n                                   onChange={(event) => {\r\n                                        const id = uniqid();\r\n                                        setClient({\r\n                                             ...client,\r\n                                             nit: event.target.value,\r\n                                             _id: id\r\n                                        })\r\n                                   }}\r\n                              />\r\n                              {errors.nit && <span className=\"badge badge-danger\">Este campo es obligatorio</span>}\r\n                         </div>\r\n                    </div>\r\n                    <div className=\"row m-3\">\r\n                         <div className=\"col\">\r\n                              <input type=\"email\" className=\"form-control\" placeholder=\"CORREO\"\r\n                                   name=\"email\"\r\n                                   value={client.email}\r\n                                   ref={register({ required: true })}\r\n                                   onChange={(event) => {\r\n                                        setClient({\r\n                                             ...client,\r\n                                             email: event.target.value\r\n                                        })\r\n                                   }}\r\n                              />\r\n                              {errors.email && <span className=\"badge badge-danger\">Este campo es obligatorio</span>}\r\n                         </div>\r\n                         <div className=\"col\">\r\n                              <input type=\"text\" className=\"form-control\" placeholder=\"NOMBRE CONTACTO\"\r\n                                   name=\"contact\"\r\n                                   value={client.contact}\r\n                                   ref={register({ required: true })}\r\n                                   onChange={(event) => {\r\n                                        setClient({\r\n                                             ...client,\r\n                                             contact: event.target.value\r\n                                        })\r\n                                   }}\r\n                              />\r\n                              {errors.contact && <span className=\"badge badge-danger\">Este campo es obligatorio</span>}\r\n                         </div>\r\n                    </div>\r\n                    <div className=\"row m-3\">\r\n                         <div className=\"col input-group\">\r\n                              <div className=\"input-group-prepend\">\r\n                                   <span className=\"input-group-text\">+57</span>\r\n                              </div>\r\n                              <input type=\"number\" className=\"form-control\" placeholder=\"CELULAR\"\r\n                                   name=\"phone\"\r\n                                   value={client.phone}\r\n                                   ref={register({ required: true })}\r\n                                   onChange={(event) => {\r\n                                        setClient({\r\n                                             ...client,\r\n                                             phone: event.target.value\r\n                                        })\r\n                                   }}\r\n                              />\r\n                              {errors.phone && <span className=\"badge badge-danger\">Este campo es obligatorio</span>}\r\n                         </div>\r\n                         <div className=\"col input-group\">\r\n                              <div className=\"input-group-prepend\">\r\n                                   <span className=\"input-group-text\">$</span>\r\n                              </div>\r\n                              <input type=\"number\" className=\"form-control\" placeholder=\"VALOR VENTA\"\r\n                                   name=\"valueSales\"\r\n                                   value={client.valueSales}\r\n                                   ref={register({ required: false })}\r\n                                   onChange={(event) => {\r\n                                        setClient({\r\n                                             ...client,\r\n                                             valueSales: event.target.value\r\n                                        })\r\n                                   }}\r\n                              />\r\n                              {errors.valueSales && <span className=\"badge badge-danger\">Este campo es obligatorio</span>}\r\n                         </div>\r\n                    </div>\r\n                    <div className=\"row m-3\">\r\n                         <div className=\"col\">\r\n                              <textarea className=\"form-control\" placeholder=\"OBSERVACIONES\"\r\n                                   name=\"observation\"\r\n                                   value={client.observation}\r\n                                   ref={register({ required: true })}\r\n                                   onChange={(event) => {\r\n                                        setClient({\r\n                                             ...client,\r\n                                             observation: event.target.value\r\n                                        })\r\n                                   }}\r\n                              />\r\n                              {errors.observation && <span className=\"badge badge-danger\">Este campo es obligatorio</span>}\r\n                         </div>\r\n                         <div className=\"col\">\r\n                              <input className=\"btn btn-primary btn-lg btn-block\" type=\"submit\" value=\"Actualizar datos\" />\r\n                         </div>\r\n                    </div>\r\n               </form>\r\n          </div>\r\n     );\r\n}\r\n\r\nexport default FormUpdateComponent;","import React, { useState, useEffect } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\n\r\nimport FormUpdateComponent from '../components/FormUpdateClient'\r\n\r\n\r\nconst UpdateClientComponent = () => {\r\n\r\n     const params = useParams();\r\n     const id_params = params.id;\r\n\r\n     const data = useState(localStorage.getItem('datos') !== null ? JSON.parse(localStorage.getItem('datos')) : [])\r\n     const [dataFiltered, setDataFiltered] = useState()\r\n\r\n     const filterClient = data[0].filter(client => (\r\n          client._id === id_params\r\n     ))\r\n\r\n     useEffect(() => {\r\n          setDataFiltered(filterClient[0])\r\n     }, [])\r\n\r\n     return (\r\n          <div>\r\n               <div className=\"jumbotron\">\r\n                    <h1 className=\"display-4\">Actualizar datos</h1>\r\n                    <p className=\"lead\">Este cliente sera actualizado de manera local, es decir que solo cambiara en este computador</p>\r\n                    <Link className=\"btn btn-secondary\" to=\"/coexitoapp/dashboard\" role=\"button\">Gestionar mis clientes</Link>\r\n               </div>\r\n               <h4 className=\"text-center m-5\">COMPLETA TODOS LOS DATOS DEL FORMULARIO</h4>\r\n               <FormUpdateComponent dataUpdate={filterClient[0]} />\r\n          </div>\r\n     );\r\n}\r\n\r\nexport default UpdateClientComponent;","import React from 'react';\r\nimport { BrowserRouter, Route, Switch} from 'react-router-dom'\r\n\r\nimport MainComponent from './pages/Main';\r\nimport NewClientComponent from './pages/NewClient';\r\nimport DashboardClientsComponent from './pages/DashboardClients';\r\nimport UpdateClientComponent from './pages/UpdateClient';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n     <Switch>\r\n       <Route exact path='/coexitoapp/' component={MainComponent}/>\r\n       <Route exact path='/coexitoapp/newclient' component={NewClientComponent}/>\r\n       <Route exact path='/coexitoapp/dashboard' component={DashboardClientsComponent}/>\r\n       <Route exact path='/coexitoapp/dashboard/:id' component={UpdateClientComponent}/>\r\n     </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n//https://www.youtube.com/watch?v=M4JUuuM6qg8","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}